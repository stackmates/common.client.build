:root {
  /*--flip-card-height: 600px;*/
}

/* entire container, keeps perspective */
.Flipcontainer {
  perspective: 1000;
}

  /* flip the pane when hovered */
  .Flipcontainer:hover .flipper, .Flipcontainer.hover .flipper {
    transform: rotateY(180deg);
  }

.Flipcontainer, .front, .back {
  /*width: 320px;*/
  min-height: var(--flip-card-height);
}

/* flip speed goes here */
.flipper {
  transition: 0.6s;
  transform-style: preserve-3d;

  position: relative;
}

/* hide back of pane during swap */
.front, .back {
  backface-visibility: hidden;

  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
}

/* front pane, placed above back */
.front {
  z-index: 2;
  /*background: var(--concrete);*/
}

/* back, initially hidden pane */
.back {
  transform: rotateY(180deg);
  /*background: var(--positive);*/
  /*display: none;*/
}

/* Adding the flip class to the container element will flip the card using JavaScript
-- no user hover required. A JavaScript comment like*/
.Flipcontainer:hover .flipper, .Flipcontainer.hover .flipper, .Flipcontainer.flip .flipper {
  transform: rotateY(180deg);
}



.vertical.Flipcontainer {
  position: relative;
}

  .vertical .back {
    transform: rotateX(180deg);
  }

  .vertical.Flipcontainer .flipper {
    transform-origin: 100% (var(--flip-card-height) / 2); /* half of height */
  }

  .vertical.Flipcontainer:hover .flipper {
    transform: rotateX(-180deg);
  }
